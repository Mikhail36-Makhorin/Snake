// Зачем нужен: класс Snake описывает логику змейки (текущее тело, движение, проверка столкновений).

#pragma once

#include <deque>    
#include <utility>  

/**
 * Класс Snake отвечает за логику змеи: её положение, направление, рост и столкновение.
 */
class Snake {
private:
    std::deque<std::pair<int,int>> body; // список сегментов (x,y)
    int dx, dy;                          // текущее направление движения (например, (1,0))

public:
    /**
     * Конструктор, создаёт змею с одним сегментом в позиции (startX, startY).
     */
    Snake(int startX, int startY);

    /**
     * Установка направления движения (dx, dy).
     */
    void setDirection(int newDx, int newDy);

    /**
     * Двигает змею — добавляет новую голову, убирает хвост.
     */
    void move();

    /**
     * Увеличивает длину змейки на 1 (дублирует последний сегмент).
     */
    void grow();

    /**
     * Проверяет, не столкнулась ли голова змейки сама с собой.
     * true, если столкнулась
     */
    bool checkSelfCollision() const;

    /**
     * Возвращает текущее тело змеи (константная ссылка).
     */
    const std::deque<std::pair<int,int>>& getBody() const;

    /**
     * Возвращает ссылку на тело змеи, позволяя изменить координаты уже существующей головы.
     */
    std::deque<std::pair<int,int>>& getMutableBody();
};